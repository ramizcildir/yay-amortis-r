import pygame
import sys
import math

# Pygame başlangıç
pygame.init()
WIDTH, HEIGHT = 900, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Araba Süspansiyon Simülasyonu")

# Renkler
WHITE = (255, 255, 255)
GRAY = (220, 220, 220)
DARK_GRAY = (100, 100, 100)
BLACK = (0, 0, 0)
RED = (200, 50, 50)
BLUE = (50, 100, 255)
GREEN = (50, 200, 50)

clock = pygame.time.Clock()
dt = 0.016  # ~60 FPS

# Fiziksel sabitler
mass = 2.0          # kg
k = 50.0            # N/m
c = 5.0             # Ns/m
gravity = 9.81      # m/s²

# Yay sabit pozisyonlar
anchor_y = 200
car_width = 200
car_height = 60
wheel_radius = 30
wheel_offset = 60

# Başlangıç durumu
y = 300.0
v = 0.0
a = 0.0

font = pygame.font.SysFont("Arial", 20)

def draw_suspension(start_y, end_y, x_offset):
    """Yay + amortisör çizimi (yan yana)"""
    segments = 8
    segment_len = (end_y - start_y) / segments
    spring_width = 20
    points = []
    direction = 1

    for i in range(segments + 1):
        x = x_offset + (spring_width * direction if i not in [0, segments] else 0)
        y_pos = start_y + i * segment_len
        points.append((x, y_pos))
        direction *= -1

    pygame.draw.lines(screen, BLUE, False, points, 4)

    # Amortisör çiz (düz çizgi)
    pygame.draw.line(screen, DARK_GRAY, (x_offset + 40, start_y), (x_offset + 40, end_y), 6)

def draw_car_body(car_y):
    """Araç kasasını çiz"""
    rect = pygame.Rect(WIDTH//2 - car_width//2, int(car_y), car_width, car_height)
    pygame.draw.rect(screen, RED, rect, border_radius=12)
    pygame.draw.rect(screen, BLACK, rect, 2, border_radius=12)

def draw_wheels(car_y):
    """Tekerlekleri çiz"""
    x1 = WIDTH//2 - wheel_offset
    x2 = WIDTH//2 + wheel_offset
    y_wheel = int(car_y + car_height + wheel_radius)
    pygame.draw.circle(screen, BLACK, (x1, y_wheel), wheel_radius)
    pygame.draw.circle(screen, BLACK, (x2, y_wheel), wheel_radius)
    pygame.draw.circle(screen, GRAY, (x1, y_wheel), wheel_radius - 5)
    pygame.draw.circle(screen, GRAY, (x2, y_wheel), wheel_radius - 5)

def draw_ground():
    """Zemini çiz"""
    ground_y = HEIGHT - 40
    pygame.draw.rect(screen, GREEN, (0, ground_y, WIDTH, 40))

def draw_info():
    """Sistem bilgileri"""
    info_texts = [
        f"Kütle: {mass:.2f} kg",
        f"Yay Sabiti: {k:.1f} N/m",
        f"Amortisör: {c:.1f} Ns/m",
        f"Hız: {v:.2f} m/s",
        f"İvme: {a:.2f} m/s²"
    ]
    for i, text in enumerate(info_texts):
        label = font.render(text, True, BLACK)
        screen.blit(label, (10, 10 + i * 25))

def update_physics():
    global y, v, a
    displacement = y - anchor_y
    spring_force = -k * displacement
    damping_force = -c * v
    net_force = spring_force + damping_force + mass * gravity
    a = net_force / mass
    v += a * dt
    y += v * dt

def handle_input():
    global k, c, mass, v
    keys = pygame.key.get_pressed()
    if keys[pygame.K_UP]:
        k += 10 * dt
    if keys[pygame.K_DOWN]:
        k = max(0, k - 10 * dt)
    if keys[pygame.K_LEFT]:
        c = max(0, c - 10 * dt)
    if keys[pygame.K_RIGHT]:
        c += 10 * dt
    if keys[pygame.K_w]:
        mass += 0.5 * dt
    if keys[pygame.K_s]:
        mass = max(0.5, mass - 0.5 * dt)
    if keys[pygame.K_SPACE]:
        v = -6  # zıplat

def main():
    global dt
    running = True
    while running:
        screen.fill(WHITE)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        handle_input()
        update_physics()

        # Çizimler
        draw_ground()
        draw_suspension(anchor_y, y, WIDTH//2 - 70)
        draw_car_body(y)
        draw_wheels(y)
        draw_info()

        pygame.display.flip()
        dt = clock.tick(60) / 1000.0

    pygame.quit()
    sys.exit()

if __name__ == "__main__":
    main()
